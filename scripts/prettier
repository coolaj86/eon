#!/usr/bin/env node
'use strict';

var path = require('path');
var fs = require('fs').promises;
var { exec } = require('child_process');
var Lateral = require('lateral').Lateral;

var siteDir = path.resolve(__dirname, '../../..');

async function getFiles(dir) {
  var dirents = await fs.readdir(dir, { withFileTypes: true });
  var files = await Promise.all(
    dirents.map(function (dirent) {
      var res = path.resolve(dir, dirent.name);
      return dirent.isDirectory() ? getFiles(res) : res;
    })
  );
  return Array.prototype.concat(...files);
}

async function prettier(file) {
  return new Promise(function (resolve, reject) {
    var cmd = `prettier --write --print-width=10000 ${file}`;
    var proc = require('child_process').spawn(cmd, {
      env: {
        PATH: process.env.PATH
      },
      shell: true,
      stdio: ['inherit', 'inherit', 'inherit'],
      cwd: siteDir
    });
    proc.on('close', function (code) {
      resolve(code);
    });
  });
}

getFiles(path.join(siteDir, 'public')).then(function (files) {
  var onEach = function (complete, file) {
    Promise.resolve()
      .then(function () {
        return prettier(file);
      })
      // TODO remove empty lines outside of tags
      .then(function () {
        complete();
      });
  };
  var lateral = Lateral.create(onEach, 5);
  files = files.filter(function (file) {
    return file.endsWith('html');
  });
  lateral.add(files);
});
